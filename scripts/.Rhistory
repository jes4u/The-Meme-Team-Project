library(jsonlite)
library(shiny)
library(dplyr)
library(httr)
app_id <- "1850413891841129"
customer_id <- '2557'
api_key <- 'hb2r82i8saloj1ectsfsi5omlq'
base <- "http://api-v2.applymagicsauce.com/"
auth_req <- paste0(base, "auth")
auth_data <- POST(url=auth_req,
body=list(
"customer_id"='2557',
"api_key"='hb2r82i8saloj1ectsfsi5omlq'
),
encode="json",
content_type_json(),
accept_json()
)
auth_data
library(jsonlite)
library(dplyr)
library(shiny)
library(dplyr)
library(httr)
library(httr)
app_id <- "1850413891841129"
customer_id <- '2557'
api_key <- 'hb2r82i8saloj1ectsfsi5omlq'
need_new <- 0
base <- "http://api-v2.applymagicsauce.com/"
if (need_new > 0)  {
r <- POST(paste0(base, "auth"),
add_headers("Content-Type"="application/json"),
body = '{"customer_id": 2557,
"api_key": "hb2r82i8saloj1ectsfsi5omlq"}')
if (r$status_code != 200) {
print("Bad key/id")
} else {
auth_response <- content(r)
}
}
token <- auth_response$token
install.packages(c("devtools", "rjson", "bit64", "httr"))
install.packages(c("devtools", "rjson", "bit64", "httr"))
library(devtools)
library(devtools)
install_github("twitteR", username="geoffjentry")
library(twitteR)
library(devtools)
install_github("twitteR", username="geoffjentry")
library(twitteR)
install.packages(c("devtools", "rjson", "bit64", "httr"))
base <- "http://api-v2.applymagicsauce.com/"
library(devtools)
install_github("twitteR", username="geoffjentry")
library(twitteR)
library(twitteR)
install_github("geoffjentry/twitterR")
install_github("twitteR", username="geoffjentry")
install_github("geoffjentry/twitteR")
library(twitteR)
customer_id <- '2557'
api_key <- 'hb2r82i8saloj1ectsfsi5omlq'
need_new <- 0
base <- "http://api-v2.applymagicsauce.com/"
if (need_new > 0)  {
r <- POST(paste0(base, "auth"),
add_headers("Content-Type"="application/json"),
body = '{"customer_id": 2557,
"api_key": "hb2r82i8saloj1ectsfsi5omlq"}')
if (r$status_code != 200) {
print("Bad key/id")
} else {
auth_response <- content(r)
}
}
token <- auth_response$token
library("geoffjentry/twitteR")
api_key <- "RIXgPEn59oOUm2qn5WBQX2sW1"
api_secret <- "70qPb7pp7mQCOjRPU3jP7kxhu4N91vavVupBvih08Bp3aHrkXN"
access_token <- "4081108513-Lj3BaXetniCt09A1uvn4U5YFZGSM1JQHiyapjfq"
twitter_access_secret <- "S1YtKDOJIXDj2ARejfFv3tbx8OmBVFUHgStiCoLBdwOGr"
setup_twitter_oauth(api_key,api_secret,access_token,access_token_secret)
access_token_secret <- "S1YtKDOJIXDj2ARejfFv3tbx8OmBVFUHgStiCoLBdwOGr"
setup_twitter_oauth(api_key,api_secret,access_token,access_token_secret)
library(jsonlite)
library(dplyr)
library(shiny)
library(httr)
library(devtools)
library(twitteR)
install.packages('httr')
install.packages("httr")
install.packages('devtools')
install.packages('twitteR')
library(jsonlite)
library(dplyr)
library(shiny)
library(httr)
library(devtools)
library(twitteR)
user1 <- '@realDonaldTrump'
user2 <- '@barrecan'
t_api_key <- "RIXgPEn59oOUm2qn5WBQX2sW1"
t_api_secret <- "70qPb7pp7mQCOjRPU3jP7kxhu4N91vavVupBvih08Bp3aHrkXN"
t_access_token <- "4081108513-Lj3BaXetniCt09A1uvn4U5YFZGSM1JQHiyapjfq"
t_access_token_secret <- "S1YtKDOJIXDj2ARejfFv3tbx8OmBVFUHgStiCoLBdwOGr"
SetupTwitterOauth <- function() {
setup_twitter_oauth(t_api_key,
t_api_secret,
t_access_token,
t_access_token_secret)
}
SetupTwitterOauth()
GetTweets <- function(t_handle) {
t_user <- getUser(t_handle)
timeline <- userTimeline(t_user)
tweets <- c()
for (i in seq(length(timeline))) {
tweets <- c(tweets, timeline[[i]]$text)
}
return(toString(tweets))
}
tweets1 <- GetTweets(user1)
tweets2 <- GetTweets(user2)
ams_base <- "http://api-v2.applymagicsauce.com/"
ams_customer_id <- '2557'
ams_api_key <- 'hb2r82i8saloj1ectsfsi5omlq'
ams_auth_req <- POST(paste0(ams_base, "auth"),
add_headers("Content-Type"="application/json"),
body = '{"customer_id": 2557,
"api_key": "hb2r82i8saloj1ectsfsi5omlq"}')
if (ams_auth_req$status_code != 200) {
print("Bad key/id")
}
token <- content(ams_auth_req)$token
RequestAMS <- function(token='uuj6skmeji1km2ecodfv0nsptf', tweets) {
request <- POST(paste0(ams_base, "text?", "source=TWEET", "&interpretations=true"),
add_headers("X-Auth-Token"=token,
"Content-type"="application/json"),
body=tweets)
if (request$status_code == 403) {
###Redundant, find more elegant solution###
ams_auth_req <- POST(paste0(ams_base, "auth"),
add_headers("Content-Type"="application/json"),
body = '{"customer_id": 2557,
"api_key": "hb2r82i8saloj1ectsfsi5omlq"}')
if (ams_auth_req$status_code != 200) {
return("Bad key/id")
} else {
token <- content(ams_auth_req)$token
request <- RequestAMS(token, tweets)
}
}
return(request)
}
ams_resp1 <- RequestAMS(token=token, tweets=tweets1)
ams_resp2 <- RequestAMS(token=token, tweets=tweets2)
predictions1 <- as.data.frame(ams_data1$predictions)
ams_data1 <- content(ams_resp1)
ams_data2 <- content(ams_resp2)
predictions1 <- as.data.frame(ams_data1$predictions)
interpretations1 <- as.data.frame(ams_data1$interpretations)
predictions2 <- as.data.frame(ams_data2$predictions)
interpretations2 <- as.data.frame(ams_data2$interpretations)
View(interpretations1)
View(interpretations2)
View(predictions1)
View(predictions2)
